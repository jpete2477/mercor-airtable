services:
  app:
    build: .
    container_name: applicant-tracking-app
    ports:
      - "5000:5000"
    environment:
      # Flask settings
      - FLASK_ENV=${FLASK_ENV:-production}
      - FLASK_DEBUG=${FLASK_DEBUG:-false}
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key-change-in-production}
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      
      # Airtable settings (REQUIRED)
      - AIRTABLE_API_KEY=${AIRTABLE_API_KEY}
      - AIRTABLE_BASE_ID=${AIRTABLE_BASE_ID}
      
      # LLM settings
      - LLM_PROVIDER=${LLM_PROVIDER:-openai}
      - LLM_MODEL=${LLM_MODEL:-gpt-4o-mini}
      - LLM_MAX_TOKENS=${LLM_MAX_TOKENS:-512}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      
      # Redis connection
      - REDIS_URL=redis://redis:6379/0
      
      # Application settings
      - MAX_JSON_SIZE=${MAX_JSON_SIZE:-102400}
      - SHORTLIST_MIN_SCORE=${SHORTLIST_MIN_SCORE:-2}
      - RATE_LIMIT_PER_MINUTE=${RATE_LIMIT_PER_MINUTE:-60}
    volumes:
      # Mount source code for hot reloading (only in development)
      - ./app:/app/app
      - ./config:/app/config
      - ./tests:/app/tests
      # Mount requirements for development updates
      - ./requirements.txt:/app/requirements.txt
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: applicant-tracking-redis
    ports:
      - "6380:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: applicant-tracking-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    profiles:
      - production

volumes:
  redis_data:
    driver: local

networks:
  default:
    driver: bridge